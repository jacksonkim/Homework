1. Create a class name: Customer. Private class variables: String firstName, lastName, emailAddress. Constructor: accepts three String variables to populate employee's firstName, lastName, and emailAddress. Methods: add three 'get' methods to return the class variables
2. Write code in the main method of the program to keep asking the user to enter 3 strings: firstName, lastName, emailAddress. Give the user the option to choose Yes/No to continue or stop after each round
3. Add exception catching capability to the main method to catch for errors if the user enters numeric data for any of the input variable.
4. Each time after the new data is entered by the user, use the data input by the user to create a Customer object and call the methods of requirements 5, 6, 7 to carry out the rest of the tasks. * There's no need to create a new Customer variable each time, you can reuse the existing Customer variable. 
5. Add a method to the main program (below the main method) to add the new customer to the database. Method name: void addCustomer(Customer c). Database name: CustomerData. Table name: Customer. Table fields: f_name, l_name, e_address. * you will need to create this database using Derby. Make sure the database, table, and field names are identical to what specified here, otherwise, your code won't work when I run it using my database.
6. add a method to the main program (below the main method) to retrieve all the records of customers in the database. Method name: ArrayList<Customer> retrieveCustomers(). This methods retrieves all the records in the Customer table and returns the list of customers in a form of an arraylist of Customer data type. For example, if there are 4 records in the table, then your code should retrieve all the records and add each record to an arraylist of customer type. after that, return the arraylist that contains the list of customers to the code that calls this method. This is one of the differences between arraylist and array since the size of arraylist is not fixed, it can be used to store 1, 5, 10 or more customers depending on the number of records available in the table. *The part highligted in light blue is additional explanation added on 4/4/13.
7. add another method to display customer data retrieved from the retrieveCustomers() mether. Method name: void displayCustomerReport(ArrayList<Customer> customerList). It needs to go through every customer in the arraylist to retrieve the customer data to display.